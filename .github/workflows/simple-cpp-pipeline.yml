# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Simple Cpp Project pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up
      run: echo "${{ secrets.JFROG_TOKEN }}" | docker login anilkaiy.jfrog.io -u "${{ secrets.JFROG_USER_NAME }}" --password-stdin

    - name: Pull Docker Image
      run: docker pull anilkaiy.jfrog.io/docker-trial/development_docker:latest

    # Create a Docker container (without using docker run directly)
    - name: Set up and start the container
      run: |
        docker create --name my-container anilkaiy.jfrog.io/docker-trial/development_docker:latest
        docker start my-container
        echo "$PATH"
        docker container ls
        ./build.sh

    - name: Images
      run: docker images
  
    - name: Containers
      run: docker container ls

    - name: Build
      run: ./build.sh

    - name: Run Unit-tests
      run: ./run_unit_tests.sh

